## Properties with default values are commented out with single #
## All other comments begin with "##""
---
## statuses are in order of priority; last = highest
statuses:
    - off
    - party
    - yellow
    - red

defaultStatus: off

## If you don't want the global output to reflect local status, set to false
#showLocalStatusOnGlobalOutput: true

#service:
#    port: 8991
#    name: unique_bonjour_name # default is calculated from os.hostname

box:
#    inputDebounceDelay: 50 # (int microseconds)
#    defaultBrightness: 0.6 # (0 - 1)

##  NOTE: if you install this light sensor, make sure to enable I2C
##  Easiest way is through `sudo raspi-config` -> Interfacing Options -> I2C
    lightSensor:
        model: 'ADAFRUIT_BH1750'
#        transform:
#            function: 'LOG',
#            coefficient: 0.13
#            offset: -0.0967
#            min: 0.05
#            max: 0.6 # default is calculated from config.box.defaultBrightness

## I chose these pins from pins that are not reserved for alternate
## functions. This is where they are on the board:
##
##       top side
## <------------------+
##            -----   |
## sensor   3v3 | 5v  |
##  |_.-SDA-* 2 | 5v  | r
##    `-SCL-* 3 | G   | i
##            4 | 14  | g
##            G | 15  | h
##      .- * 17 | 18 *| t  -.
## out1-|  * 27 | G   |     |
##      `- * 22 | 23 *| s   |
##          3v3 | 24 *| i   |- in
##           10 | G   | d   |
##            9 | 25 *| e  -`
##           11 | 8   |
##            G | 7   |
##            --+--   |  -- RPi 2+ only
##  out 2     0 | 1   | |
##     |_.- * 5 | G   | v
##       `- * 6 | 12 *|
##           13 | G   |
##           19 | 16  |
##           26 | 20  |
##            G | 21  |
##            -----   |
##                    v

    inputsByName:
##        For on/off switch (toggle, rotary, etc.), use ON_OFF input type:
##        yellow:
##            pin: 23
##            mode: ON_OFF
##            action: STATUS
##            onValue: yellow
##        red:
##            pin: 24
##            mode: ON_OFF
##            action: STATUS
##            onValue: red

##      For momentary buttons, use TRIGGER input type:
        black:
            pin: 18
            mode: TRIGGER
            action: STATUS
            onValue: off
        yellow:
            pin: 23
            mode: TRIGGER
            action: STATUS
            onValue: yellow
        red:
            pin: 24
            mode: TRIGGER
            action: STATUS
            onValue: red
        party:
            pin: 25
            mode: TRIGGER
            action: STATUS
            onValue: party

    globalStatusOutputsByName:
        red:
            mode: PWM
            pin: 17
        green:
            mode: PWM
            pin: 27
        blue:
            mode: PWM
            pin: 22

    localStatusOutputsByName:
      red:
        mode: PWM
        pin: 5
        inverted: true
      green:
        mode: PWM
        pin: 6
        inverted: true
      blue:
        mode: PWM
        pin: 12
        inverted: true

    outputsByStatus:
        off:
            red: 0
            green: 0
            blue: 0
        yellow:
            red: 255
            green: 255
            blue: 0
        red:
            red: 255
            green: 0
            blue: 0
        party:
            red:
                function: SIN
                period: 4000
                min: 50
                max: 255
            green:
                function: SIN
                period: 3431
                min: 50
                max: 255
            blue:
                function: SIN
                period: 4569
                min: 50
                max: 255
